def BUILD_FLAGS = "--verbose --show-trace --no-link"
def CHECK_FLAGS = "--verbose --show-trace"

pipeline {
  agent { label 'nix' }

  triggers {
    pollSCM('H/5 * * * *')
  }

  stages {
    stage('prepare') {
      steps {
        sh "nix --version"
        echo "branch: ${env.GIT_BRANCH}"
      }
    }

    stage('check') {
      steps {
        sh "nix flake check . ${CHECK_FLAGS}"
      }
    }

    stage('build') {
      steps {
        script {
          def flakeJson = sh(returnStdout: true, script: 'nix flake show --json')
          def flake = readJSON(text: flakeJson)
          flake.packages."x86_64-linux".each { name, _ ->
            sh "nix build .#${name} ${BUILD_FLAGS}"
          }
        }
      }
    }

    stage('blessed') {
      steps {
        script {
          def hosts = readJSON(file: "./hosts.json")
          hosts.each { name, val ->
            if (val.blessed) {
              sh "nix build .#nixosConfigurations.${name}.config.system.build.toplevel ${BUILD_FLAGS}"
            }
          }
        }
      }
    }

    stage('deploy') {
      steps {
        script {
          if (env.GIT_BRANCH == 'origin/master') {
            sh "nats pub --server \"${NATS_SERVER}\" nixos.autoupgrade \"REF=$GIT_COMMIT\""
          } else {
            echo "Not deploying branch ${env.GIT_BRANCH}"
          }
        }
      }
    }
  }
}
